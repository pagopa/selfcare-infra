on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      environment_short:
        type: string
        required: true
      agent:
        type: string
        required: true

env:
  STORAGE_ACCOUNT_NAME: "selc${{ inputs.environment_short }}checkoutsa"
  STORAGE_CONTAINER: "$web"
  STORAGE_ACCOUNT_RG: "selc-${{ inputs.environment_short }}-checkout-fe-rg"
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true
  CDN_PROFILE: "selc-${{ inputs.environment_short }}-checkout-cdn-profile"
  CDN_NAME: "selc-${{ inputs.environment_short }}-checkout-cdn-endpoint"

jobs:
  
  publish:
    name: Publish web assets ${{ inputs.environment }}
    runs-on: ["${{ inputs.environment }}"]
    environment: ${{ inputs.environment }}-ci
    permissions:
      id-token: write
      pull-requests: write
      contents: read

    steps:

    - name: Checkout
      id: checkout
      uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Upload to blob storage
      run: |
          ls -la

    - name: Azure Login
      id: az_login
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ vars.ARM_TENANT_ID }}
        subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - name: Upload app-io-premium-plans to blob storage
      run: |
          az storage blob upload \
                --container '$web' \
                --account-name "${{ env.STORAGE_ACCOUNT_NAME }}" \
                --account-key "${{ secrets.STORAGE_CHECKOUT_ACCOUNT_KEY }}" \
                --file "./src/core/env/${{ inputs.environment }}/assets/app-io-premium-plans.json" \
                --overwrite true \
                --name 'assets/app-io-premium-plans.json'
      
    - name: Upload config to blob storage
      run: |
          az storage blob upload \
                --container '$web' \
                --account-name "${{ env.STORAGE_ACCOUNT_NAME }}" \
                --account-key "${{ secrets.STORAGE_CHECKOUT_ACCOUNT_KEY }}" \
                --file "./src/core/env/${{ inputs.environment }}/assets/config.json" \
                --overwrite true \
                --name 'assets/config.json'
    
    - name: Upload product_institution_types to blob storage
      run: |
          az storage blob upload \
                --container '$web' \
                --account-name "${{ env.STORAGE_ACCOUNT_NAME }}" \
                --account-key "${{ secrets.STORAGE_CHECKOUT_ACCOUNT_KEY }}" \
                --file "./src/core/env/${{ inputs.environment }}/assets/product_institution_types.json" \
                --overwrite true \
                --name 'assets/product_institution_types.json'

    - name: Upload login-alert-message to blob storage
      run: |
          az storage blob upload \
                --container '$web' \
                --account-name "${{ env.STORAGE_ACCOUNT_NAME }}" \
                --account-key "${{ secrets.STORAGE_CHECKOUT_ACCOUNT_KEY }}" \
                --file "./src/core/env/${{ inputs.environment }}/assets/login-alert-message.json" \
                --overwrite true \
                --name 'assets/login-alert-message.json'

    - name: Purge blob storage
      run: |
          az cdn endpoint purge \
                --resource-group "${{ env.STORAGE_ACCOUNT_RG }}" \
                --name "${{ env.CDN_NAME }}" \
                --profile-name "${{ env.CDN_PROFILE }}"  \
                --content-paths "/assets/*" \
                --no-wait

    - name: Azure Logout
      id: az_logout
      if: always()
      run: |
        az logout        