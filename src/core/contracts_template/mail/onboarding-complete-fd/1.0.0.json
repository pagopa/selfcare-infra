{
  "subject": "UHJvc3NpbWkgcGFzc2kgc3UgRmlkZWl1c3Npb25pIERpZ2l0YWxpOiBndWlkYSBhbGzigJlvbmJvYXJkaW5nIGluIHBpYXR0YWZvcm1h",
  "body": "PCFkb2N0eXBlIGh0bWw+DQo8aHRtbCBsYW5nPSJpdCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KDQo8aGVhZD4NCiAgPHRpdGxlPiBOb3RpZmljYSBkaSBhcHByb3ZhemlvbmUgZGVsIFJlZ29sYW1lbnRvIGRpIFBpYXR0YWZvcm1hIGNhcmljYXRvIDwvdGl0bGU+DQogIDwhLS1baWYgIW1zb10+PCEtLT4NCiAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4NCiAgPCEtLTwhW2VuZGlmXS0tPg0KICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+DQogIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+DQogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+DQogICAgI291dGxvb2sgYSB7DQogICAgICBwYWRkaW5nOiAwOw0KICAgIH0NCg0KICAgIGJvZHkgew0KICAgICAgbWFyZ2luOiAwOw0KICAgICAgcGFkZGluZzogMDsNCiAgICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsNCiAgICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOw0KICAgIH0NCg0KICAgIHRhYmxlLA0KICAgIHRkIHsNCiAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7DQogICAgICBtc28tdGFibGUtbHNwYWNlOiAwcHQ7DQogICAgICBtc28tdGFibGUtcnNwYWNlOiAwcHQ7DQogICAgfQ0KDQogICAgaW1nIHsNCiAgICAgIGJvcmRlcjogMDsNCiAgICAgIGhlaWdodDogYXV0bzsNCiAgICAgIGxpbmUtaGVpZ2h0OiAxMDAlOw0KICAgICAgb3V0bGluZTogbm9uZTsNCiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCiAgICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7DQogICAgfQ0KDQogICAgcCB7DQogICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgIG1hcmdpbjogMTNweCAwOw0KICAgIH0NCiAgPC9zdHlsZT4NCiAgPCEtLVtpZiBtc29dPg0KICA8bm9zY3JpcHQ+DQogICAgPHhtbD4NCiAgICAgIDxvOk9mZmljZURvY3VtZW50U2V0dGluZ3M+DQogICAgICAgIDxvOkFsbG93UE5HLz4NCiAgICAgICAgPG86UGl4ZWxzUGVySW5jaD45NjwvbzpQaXhlbHNQZXJJbmNoPg0KICAgICAgPC9vOk9mZmljZURvY3VtZW50U2V0dGluZ3M+DQogICAgPC94bWw+DQogIDwvbm9zY3JpcHQ+DQogIDwhW2VuZGlmXS0tPg0KICA8IS0tW2lmIGx0ZSBtc28gMTFdPg0KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KICAgICAgICAgIC5tai1vdXRsb29rLWdyb3VwLWZpeCB7IHdpZHRoOjEwMCUgIWltcG9ydGFudDsgfQ0KICAgICAgICA8L3N0eWxlPg0KICA8IVtlbmRpZl0tLT4NCiAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICA8bGluayBocmVmPSJodHRwczovL3NlbGZjYXJlLnBhZ29wYS5pdC9hc3NldHMvZm9udC9zZWxmaG9zdGVkZm9udHMuY3NzIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIj4NCiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4NCiAgICBAaW1wb3J0IHVybChodHRwczovL3NlbGZjYXJlLnBhZ29wYS5pdC9hc3NldHMvZm9udC9zZWxmaG9zdGVkZm9udHMuY3NzKTsNCiAgPC9zdHlsZT4NCiAgPCEtLTwhW2VuZGlmXS0tPg0KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0ODBweCkgew0KICAgICAgLm1qLWNvbHVtbi1wZXItMTAwIHsNCiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgfQ0KICAgIH0NCiAgPC9zdHlsZT4NCiAgPHN0eWxlIG1lZGlhPSJzY3JlZW4gYW5kIChtaW4td2lkdGg6NDgwcHgpIj4NCiAgICAubW96LXRleHQtaHRtbCAubWotY29sdW1uLXBlci0xMDAgew0KICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICB9DQogIDwvc3R5bGU+DQogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+DQogICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQ4MHB4KSB7DQogICAgICB0YWJsZS5tai1mdWxsLXdpZHRoLW1vYmlsZSB7DQogICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICB9DQoNCiAgICAgIHRkLm1qLWZ1bGwtd2lkdGgtbW9iaWxlIHsNCiAgICAgICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsNCiAgICAgIH0NCiAgICB9DQogIDwvc3R5bGU+DQogIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sIiBjaGFyc2V0PSJVVEYtOCIgLz4NCiAgPG1ldGEgbmFtZT0iY29sb3Itc2NoZW1lIiBjb250ZW50PSJsaWdodCBkYXJrIiAvPg0KICA8bWV0YSBuYW1lPSJzdXBwb3J0ZWQtY29sb3Itc2NoZW1lcyIgY29udGVudD0ibGlnaHQgZGFyayIgLz4NCjwvaGVhZD4NCg0KPGJvZHkgc3R5bGU9IndvcmQtc3BhY2luZzpub3JtYWw7Ij4NCjxkaXYgY2xhc3M9Im1haWwtYm9keSIgc3R5bGU9IiI+DQogIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgY2xhc3M9IiIgc3R5bGU9IndpZHRoOjYwMHB4OyIgd2lkdGg9IjYwMCIgPjx0cj48dGQgc3R5bGU9ImxpbmUtaGVpZ2h0OjBweDtmb250LXNpemU6MHB4O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7Ij48IVtlbmRpZl0tLT4NCiAgPGRpdiBzdHlsZT0ibWFyZ2luOjBweCBhdXRvO21heC13aWR0aDo2MDBweDsiPg0KICAgIDx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0id2lkdGg6MTAwJTsiPg0KICAgICAgPHRib2R5Pg0KICAgICAgPHRyPg0KICAgICAgICA8dGQgc3R5bGU9ImRpcmVjdGlvbjpsdHI7Zm9udC1zaXplOjBweDtwYWRkaW5nOjIwcHggMDt0ZXh0LWFsaWduOmNlbnRlcjsiPg0KICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48IVtlbmRpZl0tLT4NCiAgICAgICAgICA8IS0tIFBhZ29QQSBMb2dvIC0tPg0KICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0cj48dGQgY2xhc3M9ImhlYWRlci1vdXRsb29rIiB3aWR0aD0iNjAwcHgiID48dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGNsYXNzPSJoZWFkZXItb3V0bG9vayIgc3R5bGU9IndpZHRoOjYwMHB4OyIgd2lkdGg9IjYwMCIgPjx0cj48dGQgc3R5bGU9ImxpbmUtaGVpZ2h0OjBweDtmb250LXNpemU6MHB4O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7Ij48IVtlbmRpZl0tLT4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXIiIHN0eWxlPSJtYXJnaW46MHB4IGF1dG87bWF4LXdpZHRoOjYwMHB4OyI+DQogICAgICAgICAgICA8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9IndpZHRoOjEwMCU7Ij4NCiAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJkaXJlY3Rpb246bHRyO2ZvbnQtc2l6ZTowcHg7cGFkZGluZzoyMHB4IDA7cGFkZGluZy1ib3R0b206MTZweDtwYWRkaW5nLXRvcDowcHg7dGV4dC1hbGlnbjpjZW50ZXI7Ij4NCiAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NjAwcHg7IiA+PCFbZW5kaWZdLS0+DQogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSI+DQogICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgY2xhc3M9ImxpZ2h0LWltZyIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7d29yZC1icmVhazpicmVhay13b3JkOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjBweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjEwMHB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaGVpZ2h0PSJhdXRvIiBzcmM9Imh0dHBzOi8vc2VsZmNhcmUucGFnb3BhLml0L2Fzc2V0cy9sb2dvX3BhZ29wYWNvcnAucG5nIiBzdHlsZT0iYm9yZGVyOjA7ZGlzcGxheTpibG9jaztvdXRsaW5lOm5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7aGVpZ2h0OmF1dG87d2lkdGg6MTAwJTtmb250LXNpemU6MTNweDsiIHdpZHRoPSIxMDAiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXJrLWltZyIgc3R5bGU9Im1zby1oaWRlOiBhbGw7IGRpc3BsYXk6IG5vbmU7IHBhZGRpbmc6IDEwcHggMjVweCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zZWxmY2FyZS5wYWdvcGEuaXQvYXNzZXRzL2xvZ29fcGFnb3BhX3doaXRlLnBuZyIgd2lkdGg9IjEwMHB4IiBjbGFzcz0iZGFyay1pbWciIHN0eWxlPSJkaXNwbGF5OiBub25lIiAvPg0KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48dHI+PHRkIGNsYXNzPSJzZWN0aW9uLW91dGxvb2siIHdpZHRoPSI2MDBweCIgPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgY2xhc3M9InNlY3Rpb24tb3V0bG9vayIgc3R5bGU9IndpZHRoOjYwMHB4OyIgd2lkdGg9IjYwMCIgPjx0cj48dGQgc3R5bGU9ImxpbmUtaGVpZ2h0OjBweDtmb250LXNpemU6MHB4O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7Ij48IVtlbmRpZl0tLT4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBzdHlsZT0ibWFyZ2luOjBweCBhdXRvO21heC13aWR0aDo2MDBweDsiPg0KICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDoxMDAlOyI+DQogICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweCAwO3BhZGRpbmctYm90dG9tOjBweDtwYWRkaW5nLXRvcDowcHg7dGV4dC1hbGlnbjpjZW50ZXI7Ij4NCiAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NjAwcHg7IiA+PCFbZW5kaWZdLS0+DQogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSI+DQogICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS0gVGl0bGUgLS0+DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJsZWZ0IiBjbGFzcz0idGV4dCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7cGFkZGluZy10b3A6MTZweDtwYWRkaW5nLWJvdHRvbToxNnB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LWZhbWlseTpUaXRpbGxpdW0gV2ViLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6Ym9sZDtsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246bGVmdDtjb2xvcjojMTczMjREOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBINCBEZXNrdG9wIChmcm9tIE1VSSBJdGFsaWEpLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIHN0eWxlPSJmb250LXNpemU6IDMycHg7IGxpbmUtaGVpZ2h0OiA0MHB4OyBtYXJnaW46IDAiPiBOb3RpZmljYSBkaSBhcHByb3ZhemlvbmUgZGVsIFJlZ29sYW1lbnRvIGRpIFBpYXR0YWZvcm1hIGNhcmljYXRvIDwvaDE+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTWFpbiBNZXNzYWdlIC0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgY2xhc3M9InRleHQiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3BhZGRpbmctdG9wOjE2cHg7cGFkZGluZy1ib3R0b206MHB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LWZhbWlseTpUaXRpbGxpdW0gV2ViLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7Zm9udC1zaXplOjE2cHg7Zm9udC13ZWlnaHQ6cmVndWxhcjtsaW5lLWhlaWdodDoyNHB4O3RleHQtYWxpZ246bGVmdDtjb2xvcjojMTczMjREOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IDBweCI+Q2lhbyw8L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgY2xhc3M9InRleHQiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3BhZGRpbmctdG9wOjBweDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6VGl0aWxsaXVtIFdlYiwgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxNnB4O2ZvbnQtd2VpZ2h0OnJlZ3VsYXI7bGluZS1oZWlnaHQ6MjRweDt0ZXh0LWFsaWduOmxlZnQ7Y29sb3I6IzE3MzI0RDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAwcHgiPiBhIHNlZ3VpdG8gZGVsbGEgcmljaGllc3RhIGRpIGFkZXNpb25lIGRlbCB0dW8gZW50ZSBhIDxzdHJvbmc+JHtwcm9kdWN0TmFtZX08L3N0cm9uZz4sIGFiYmlhbW8gY2FyaWNhdG8gaSBkb2N1bWVudGkgbmVjZXNzYXJpIG5lbGwnQXJlYSBSaXNlcnZhdGENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogMHB4Ij5QZXIgY29tcGxldGFyZSBsJ2FkZXNpb25lLCBzZWd1aSBxdWVzdGkgcGFzc2FnZ2k6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkFjY2VkaSBhbGzigJk8YSBocmVmPSIke3NlbGZjYXJlVVJMfSIgc3R5bGU9ImNvbG9yOiAjMDA3M2U2IiBjbGFzcz0ibGluayI+QXJlYSBSaXNlcnZhdGE8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5WYWkgYWwgcHJvZG90dG8gIiR7cHJvZHVjdE5hbWV9IjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+U2NhcmljYSB0dXR0YSBsYSBkb2N1bWVudGF6aW9uZTwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+RmlybWFyZSBkaWdpdGFsbWVudGUgdHV0dGkgaSBkb2N1bWVudGksIGFwcG9uZW5kbyB1bmEgZmlybWEgaW4gb2duaSBjYW1wbzwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+Q2FyaWNhIGFsbOKAmWludGVybm8gZGVsbGEgcGlhdHRhZm9ybWEgRmlkZWl1c3Npb25pIERpZ2l0YWxpIGzigJlpbnRlcm8gc2V0IGNvbnRyYXR0dWFsZSBmaXJtYXRvPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogMHB4Ij5FbnRybyA1IGdpb3JuaSBsYXZvcmF0aXZpLCB0cm92ZXJhaSwgYWxs4oCZaW50ZXJubyBkZWxsYSBwaWF0dGFmb3JtYSBGaWRlaXVzc2lvbmkgRGlnaXRhbGksIGzigJlpbnRlcm8gc2V0IGNvbnRyYXR0dWFsZSBjb250cm9maXJtYXRvLiBWZXJyw6AgaW52aWF0YSBpbm9sdHJlIHVu4oCZZW1haWwgZGkgY29uZmVybWEgZGkgYXR0aXZhemlvbmUuIFVuYSB2b2x0YSByaWNldnV0YSwgc2Fyw6AgcG9zc2liaWxlIGFjY2VkZXJlIGFsbOKAmUFyZWEgUmlzZXJ2YXRhIGUgYWdnaXVuZ2VyZSBudW92aSB1dGVudGkgcGVyIGxhIGdlc3Rpb25lIGRlbCBwcm9kb3R0by4gPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAwcHgiPiBTZSBoYWkgcHJvYmxlbWkgdGVjbmljaSBvIGRvbWFuZGUgaW4gbWVyaXRvIGFsIGZ1bnppb25hbWVudG8gZGVsbOKAmUFyZWEgUmlzZXJ2YXRhLCBzY3JpdmkgYSA8YSBocmVmPSJtYWlsdG86YXJlYXJpc2VydmF0YUBhc3Npc3RlbnphLnBhZ29wYS5pdCIgc3R5bGU9ImNvbG9yOiAjMDA3M2U2IiBjbGFzcz0ibGluayI+YXJlYXJpc2VydmF0YUBhc3Npc3RlbnphLnBhZ29wYS5pdDwvYT4uIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJsZWZ0IiBjbGFzcz0idGV4dCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7cGFkZGluZy1ib3R0b206MHB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LWZhbWlseTpUaXRpbGxpdW0gV2ViLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7Zm9udC1zaXplOjE2cHg7bGluZS1oZWlnaHQ6MjRweDt0ZXh0LWFsaWduOmxlZnQ7Y29sb3I6IzE3MzI0RDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAwcHgiPiBBIHByZXN0byw8YnIgYXJpYS1oaWRkZW49InRydWUiIC8+aWwgdGVhbSBkaSBQYWdvUEEgUy5wLkEuIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PCFbZW5kaWZdLS0+DQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwhW2VuZGlmXS0tPg0KICAgICAgICAgIDwhLS0gRGl2aWRlciAtLT4NCiAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48dHI+PHRkIGNsYXNzPSJzZWN0aW9uLW91dGxvb2siIHdpZHRoPSI2MDBweCIgPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgY2xhc3M9InNlY3Rpb24tb3V0bG9vayIgc3R5bGU9IndpZHRoOjYwMHB4OyIgd2lkdGg9IjYwMCIgPjx0cj48dGQgc3R5bGU9ImxpbmUtaGVpZ2h0OjBweDtmb250LXNpemU6MHB4O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7Ij48IVtlbmRpZl0tLT4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBzdHlsZT0ibWFyZ2luOjBweCBhdXRvO21heC13aWR0aDo2MDBweDsiPg0KICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDoxMDAlOyI+DQogICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweCAwO3BhZGRpbmctYm90dG9tOjBweDtwYWRkaW5nLXRvcDowcHg7dGV4dC1hbGlnbjpjZW50ZXI7Ij4NCiAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NjAwcHg7IiA+PCFbZW5kaWZdLS0+DQogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSI+DQogICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjEwcHggMjVweDtwYWRkaW5nLXRvcDoxNnB4O3BhZGRpbmctYm90dG9tOjE2cHg7d29yZC1icmVhazpicmVhay13b3JkOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJib3JkZXItdG9wOnNvbGlkIDFweCBsaWdodGdyZXk7Zm9udC1zaXplOjFweDttYXJnaW46MHB4IGF1dG87d2lkdGg6MTAwJTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImJvcmRlci10b3A6c29saWQgMXB4IGxpZ2h0Z3JleTtmb250LXNpemU6MXB4O21hcmdpbjowcHggYXV0bzt3aWR0aDo1NTBweDsiIHJvbGU9InByZXNlbnRhdGlvbiIgd2lkdGg9IjU1MHB4IiA+PHRyPjx0ZCBzdHlsZT0iaGVpZ2h0OjA7bGluZS1oZWlnaHQ6MDsiPiAmbmJzcDsNCjwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48IVtlbmRpZl0tLT4NCiAgICAgICAgICA8IS0tIEZvb3Rlci9EaXNjbGFpbWVyIC0tPg0KICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0cj48dGQgY2xhc3M9InNlY3Rpb24tb3V0bG9vayIgd2lkdGg9IjYwMHB4IiA+PHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0ic2VjdGlvbi1vdXRsb29rIiBzdHlsZT0id2lkdGg6NjAwcHg7IiB3aWR0aD0iNjAwIiA+PHRyPjx0ZCBzdHlsZT0ibGluZS1oZWlnaHQ6MHB4O2ZvbnQtc2l6ZTowcHg7bXNvLWxpbmUtaGVpZ2h0LXJ1bGU6ZXhhY3RseTsiPjwhW2VuZGlmXS0tPg0KICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIHN0eWxlPSJtYXJnaW46MHB4IGF1dG87bWF4LXdpZHRoOjYwMHB4OyI+DQogICAgICAgICAgICA8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9IndpZHRoOjEwMCU7Ij4NCiAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJkaXJlY3Rpb246bHRyO2ZvbnQtc2l6ZTowcHg7cGFkZGluZzoyMHB4IDA7cGFkZGluZy1ib3R0b206MTZweDtwYWRkaW5nLXRvcDowcHg7dGV4dC1hbGlnbjpjZW50ZXI7Ij4NCiAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NjAwcHg7IiA+PCFbZW5kaWZdLS0+DQogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSI+DQogICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgY2xhc3M9ImZvb3Rlci10ZXh0IiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjEwcHggMjVweDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6VGl0aWxsaXVtIFdlYiwgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjIwcHg7dGV4dC1hbGlnbjpsZWZ0O2NvbG9yOiM1QzZGODI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogMHB4Ij4gUmljZXZpIHF1ZXN0byBtZXNzYWdnaW8gcGVyY2jDqSBoYWkgdW7igJl1dGVuemEgYXR0aXZhIG5lbGzigJlBcmVhIFJpc2VydmF0YSBkZWxs4oCZZW50ZS4gPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4NCiAgICAgICAgPC90ZD4NCiAgICAgIDwvdHI+DQogICAgICA8L3Rib2R5Pg0KICAgIDwvdGFibGU+DQogIDwvZGl2Pg0KICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4NCjwvZGl2Pg0KPC9ib2R5Pg0KDQo8L2h0bWw+",
  "encoded": true
}
