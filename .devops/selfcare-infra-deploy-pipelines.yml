# only manual
trigger: none
pr: none

parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 10
  DEV_AKS_APISERVER_URL: '$(TF_DEV_AKS_APISERVER_URL)'
  DEV_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_CACRT)'
  DEV_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_DEV_NAME: '$(TF_AKS_DEV_NAME)'
  DEV_AZURE_SERVICE_CONNECTION: '$(TF_DEV_AZURE_SERVICE_CONNECTION)'
  UAT_AKS_APISERVER_URL: '$(TF_UAT_AKS_APISERVER_URL)'
  UAT_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_CACRT)'
  UAT_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_UAT_NAME: '$(TF_AKS_UAT_NAME)'
  UAT_AZURE_SERVICE_CONNECTION: '$(TF_UAT_AZURE_SERVICE_CONNECTION)'
  PROD_AKS_APISERVER_URL: '$(TF_PROD_AKS_APISERVER_URL)'
  PROD_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_CACRT)'
  PROD_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_PROD_NAME: '$(TF_AKS_PROD_NAME)'
  PROD_AZURE_SERVICE_CONNECTION: '$(TF_PROD_AZURE_SERVICE_CONNECTION)'

pool:
  vmImage: 'ubuntu-20.04'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v5.2.1
      endpoint: 'io-azure-devops-github-ro'

lockBehavior: sequential
stages:
  # DEV  
  - ${{ if eq(parameters['DEV'], true) }}:
        # DEV selfcare APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: 'selfcare_legacy'
        AZURE_DEVOPS_POOL_AGENT_NAME: "selfcare-dev-linux-infra"
        ENVIRONMENT: "dev"
        TF_ENVIRONMENT_FOLDER: "dev"
        WORKINGDIR: 'src/core'
        AKS_NAME: ${{ variables.AKS_DEV_NAME }}
        AKS_API_SERVER_URL: ${{ variables.DEV_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.DEV_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.DEV_AKS_AZURE_DEVOPS_SA_TOKEN }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: DEV-SELFCARE-SERVICE-CONN
        AZURE_SERVICE_CONNECTION_APPLY_NAME: DEV-SELFCARE-SERVICE-CONN
  
  # UAT  
  - ${{ if eq(parameters['UAT'], true) }}:
        # UAT selfcare APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: 'selfcare_legacy'
        AZURE_DEVOPS_POOL_AGENT_NAME: "selfcare-uat-linux-infra"
        ENVIRONMENT: "uat"
        TF_ENVIRONMENT_FOLDER: "uat"
        WORKINGDIR: 'src/core'
        AKS_NAME: ${{ variables.AKS_UAT_NAME }}
        AKS_API_SERVER_URL: ${{ variables.UAT_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.UAT_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.UAT_AKS_AZURE_DEVOPS_SA_TOKEN }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: UAT-SELFCARE-SERVICE-CONN
        AZURE_SERVICE_CONNECTION_APPLY_NAME: UAT-SELFCARE-SERVICE-CONN

  # PROD  
  - ${{ if eq(parameters['UAT'], true) }}:
        # PROD selfcare APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: 'selfcare_legacy'
        AZURE_DEVOPS_POOL_AGENT_NAME: "selfcare-prod-linux-infra"
        ENVIRONMENT: "prod"
        TF_ENVIRONMENT_FOLDER: "prod"
        WORKINGDIR: 'src/core'
        AKS_NAME: ${{ variables.AKS_PROD_NAME }}
        AKS_API_SERVER_URL: ${{ variables.PROD_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.PROD_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.PROD_AKS_AZURE_DEVOPS_SA_TOKEN }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: PROD-SELFCARE-SERVICE-CONN
        AZURE_SERVICE_CONNECTION_APPLY_NAME: PROD-SELFCARE-SERVICE-CONN
